package com.untamedears.rourke750.ExpensiveBeacons.BeaconTypes;

import java.io.BufferedWriter;
import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.OutputStreamWriter;

public class HasteBeacon {
	public void Beacons1(File file) throws IOException{
		FileOutputStream fos = new FileOutputStream(file);
		BufferedWriter br = new BufferedWriter(new OutputStreamWriter(fos));
		br.append("(-2,-1,-2)[57:0];(-2,-1,-1)[57:0];(-2,-1,0)[57:0];(-2,-1,1)[57:0];"+
				"(-2,-1,2)[57:0];(-1,-1,-2)[57:0];(-1,-1,0)[57:0];(-1,-1,2)[57:0];"+
				"(0,-1,-2)[57:0];(0,-1,-1)[57:0];(0,-1,1)[57:0];(0,-1,2)[57:0];"+
				"(1,-1,-2)[57:0];(1,-1,0)[57:0];(1,-1,2)[57:0];(2,-1,-2)[57:0];"+
				"(2,-1,-1)[57:0];(2,-1,0)[57:0];(2,-1,1)[57:0];(2,-1,2)[57:0]"
		);
		br.flush();
		fos.close();
	}
	public void Beacons2(File file) throws IOException{
		FileOutputStream fos = new FileOutputStream(file);
		BufferedWriter br = new BufferedWriter(new OutputStreamWriter(fos));
		br.append("(-3,-1,0)[57:0];(-2,-2,-2)[57:0];(-2,-2,-1)[57:0];(-2,-2,0)[57:0];"+
				"(-2,-2,1)[57:0];(-2,-2,2)[57:0];(-2,-1,-2)[57:0];(-2,-1,-1)[57:0];"+
				"(-2,-1,1)[57:0];(-2,-1,2)[57:0];(-1,-2,-2)[57:0];(-1,-2,0)[57:0];"+
				"(-1,-2,2)[57:0];(-1,-1,-2)[57:0];(-1,-1,0)[57:0];(-1,-1,2)[57:0];"+
				"(0,-2,-2)[57:0];(0,-2,-1)[57:0];(0,-2,1)[57:0];(0,-2,2)[57:0];"+
				"(0,-1,-3)[57:0];(0,-1,-1)[57:0];(0,-1,1)[57:0];(0,-1,3)[57:0];"+
				"(1,-2,-2)[57:0];(1,-2,0)[57:0];(1,-2,2)[57:0];(1,-1,-2)[57:0];"+
				"(1,-1,0)[57:0];(1,-1,2)[57:0];(2,-2,-2)[57:0];(2,-2,-1)[57:0];"+
				"(2,-2,0)[57:0];(2,-2,1)[57:0];(2,-2,2)[57:0];(2,-1,-2)[57:0];"+
				"(2,-1,-1)[57:0];(2,-1,1)[57:0];(2,-1,2)[57:0];(3,-1,0)[57:0]"
);
				
		br.flush();
		fos.close();
	}
	public void Beacons3(File file) throws IOException{
		FileOutputStream fos = new FileOutputStream(file);
		BufferedWriter br = new BufferedWriter(new OutputStreamWriter(fos));
		br.append(
				"(-3,-5,0)[57:0];(-3,-4,0)[57:0];(-3,-3,0)[57:0];(-3,-2,0)[57:0];"+
						"(-2,-6,-2)[57:0];(-2,-6,-1)[57:0];(-2,-6,0)[57:0];(-2,-6,1)[57:0];"+
						"(-2,-6,2)[57:0];(-2,-5,-2)[57:0];(-2,-5,-1)[57:0];(-2,-5,1)[57:0];"+
						"(-2,-5,2)[57:0];(-2,-2,-2)[57:0];(-2,-2,-1)[57:0];(-2,-2,0)[57:0];"+
						"(-2,-2,1)[57:0];(-2,-2,2)[57:0];(-1,-6,-2)[57:0];(-1,-6,0)[57:0];"+
						"(-1,-6,2)[57:0];(-1,-5,-2)[57:0];(-1,-5,0)[57:0];(-1,-5,2)[57:0];"+
						"(-1,-4,0)[57:0];(-1,-2,-2)[57:0];(-1,-2,-1)[57:0];(-1,-2,1)[57:0];"+
						"(-1,-2,2)[57:0];(-1,-1,-1)[57:0];(-1,-1,1)[57:0];(0,-6,-2)[57:0];"+
						"(0,-6,-1)[57:0];(0,-6,1)[57:0];(0,-6,2)[57:0];(0,-5,-3)[57:0];"+
						"(0,-5,-1)[57:0];(0,-5,1)[57:0];(0,-5,3)[57:0];(0,-4,-3)[57:0];"+
						"(0,-4,-1)[57:0];(0,-4,1)[57:0];(0,-4,3)[57:0];(0,-3,-3)[57:0];"+
						"(0,-3,3)[57:0];(0,-2,-3)[57:0];(0,-2,-2)[57:0];(0,-2,2)[57:0];"+
						"(0,-2,3)[57:0];(1,-6,-2)[57:0];(1,-6,0)[57:0];(1,-6,2)[57:0];"+
						"(1,-5,-2)[57:0];(1,-5,0)[57:0];(1,-5,2)[57:0];(1,-4,0)[57:0];"+
						"(1,-2,-2)[57:0];(1,-2,-1)[57:0];(1,-2,1)[57:0];(1,-2,2)[57:0];"+
						"(1,-1,-1)[57:0];(1,-1,1)[57:0];(2,-6,-2)[57:0];(2,-6,-1)[57:0];"+
						"(2,-6,0)[57:0];(2,-6,1)[57:0];(2,-6,2)[57:0];(2,-5,-2)[57:0];"+
						"(2,-5,-1)[57:0];(2,-5,1)[57:0];(2,-5,2)[57:0];(2,-2,-2)[57:0];"+
						"(2,-2,-1)[57:0];(2,-2,0)[57:0];(2,-2,1)[57:0];(2,-2,2)[57:0];"+
						"(3,-5,0)[57:0];(3,-4,0)[57:0];(3,-3,0)[57:0];(3,-2,0)[57:0]");
		br.flush();
		fos.close();
	}
	public void Beacons4(File file) throws IOException{
		FileOutputStream fos = new FileOutputStream(file);
		BufferedWriter br = new BufferedWriter(new OutputStreamWriter(fos));
		br.append(
				"(-3,-8,-3)[57:0];(-3,-8,3)[57:0];(-3,-7,-3)[57:0];(-3,-7,0)[57:0];"+
						"(-3,-7,3)[57:0];(-3,-6,-3)[57:0];(-3,-6,0)[57:0];(-3,-6,3)[57:0];"+
						"(-3,-5,-3)[57:0];(-3,-5,-2)[57:0];(-3,-5,-1)[57:0];(-3,-5,0)[57:0];"+
						"(-3,-5,1)[57:0];(-3,-5,2)[57:0];(-3,-5,3)[57:0];(-3,-4,-3)[57:0];"+
						"(-3,-4,-2)[57:0];(-3,-4,0)[57:0];(-3,-4,2)[57:0];(-3,-4,3)[57:0];"+
						"(-3,-3,-3)[57:0];(-3,-3,-2)[57:0];(-3,-3,2)[57:0];(-3,-3,3)[57:0];"+
						"(-2,-8,-2)[57:0];(-2,-8,-1)[57:0];(-2,-8,0)[57:0];(-2,-8,1)[57:0];"+
						"(-2,-8,2)[57:0];(-2,-7,-2)[57:0];(-2,-7,-1)[57:0];(-2,-7,1)[57:0];"+
						"(-2,-7,2)[57:0];(-2,-5,-3)[57:0];(-2,-5,3)[57:0];(-2,-4,-3)[57:0];"+
						"(-2,-4,-2)[57:0];(-2,-4,-1)[57:0];(-2,-4,0)[57:0];(-2,-4,1)[57:0];"+
						"(-2,-4,2)[57:0];(-2,-4,3)[57:0];(-2,-3,-3)[57:0];(-2,-3,3)[57:0];"+
						"(-2,-2,-1)[57:0];(-2,-2,0)[57:0];(-2,-2,1)[57:0];(-1,-8,-2)[57:0];"+
						"(-1,-8,0)[57:0];(-1,-8,2)[57:0];(-1,-7,-2)[57:0];(-1,-7,0)[57:0];"+
						"(-1,-7,2)[57:0];(-1,-6,0)[57:0];(-1,-5,-3)[57:0];(-1,-5,3)[57:0];"+
						"(-1,-4,-2)[57:0];(-1,-4,-1)[57:0];(-1,-4,1)[57:0];(-1,-4,2)[57:0];"+
						"(-1,-3,-1)[57:0];(-1,-3,1)[57:0];(-1,-2,-2)[57:0];(-1,-2,-1)[57:0];"+
						"(-1,-2,0)[57:0];(-1,-2,1)[57:0];(-1,-2,2)[57:0];(-1,-1,0)[57:0];"+
						"(0,-8,-2)[57:0];(0,-8,-1)[57:0];(0,-8,1)[57:0];(0,-8,2)[57:0];"+
						"(0,-7,-3)[57:0];(0,-7,-1)[57:0];(0,-7,1)[57:0];(0,-7,3)[57:0];"+
						"(0,-6,-3)[57:0];(0,-6,-1)[57:0];(0,-6,1)[57:0];(0,-6,3)[57:0];"+
						"(0,-5,-3)[57:0];(0,-5,3)[57:0];(0,-4,-3)[57:0];(0,-4,-2)[57:0];"+
						"(0,-4,2)[57:0];(0,-4,3)[57:0];(0,-2,-2)[57:0];(0,-2,-1)[57:0];"+
						"(0,-2,1)[57:0];(0,-2,2)[57:0];(0,-1,-1)[57:0];(0,-1,1)[57:0];"+
						"(1,-8,-2)[57:0];(1,-8,0)[57:0];(1,-8,2)[57:0];(1,-7,-2)[57:0];"+
						"(1,-7,0)[57:0];(1,-7,2)[57:0];(1,-6,0)[57:0];(1,-5,-3)[57:0];"+
						"(1,-5,3)[57:0];(1,-4,-2)[57:0];(1,-4,-1)[57:0];(1,-4,1)[57:0];"+
						"(1,-4,2)[57:0];(1,-3,-1)[57:0];(1,-3,1)[57:0];(1,-2,-2)[57:0];"+
						"(1,-2,-1)[57:0];(1,-2,0)[57:0];(1,-2,1)[57:0];(1,-2,2)[57:0];"+
						"(1,-1,0)[57:0];(2,-8,-2)[57:0];(2,-8,-1)[57:0];(2,-8,0)[57:0];"+
						"(2,-8,1)[57:0];(2,-8,2)[57:0];(2,-7,-2)[57:0];(2,-7,-1)[57:0];"+
						"(2,-7,1)[57:0];(2,-7,2)[57:0];(2,-5,-3)[57:0];(2,-5,3)[57:0];"+
						"(2,-4,-3)[57:0];(2,-4,-2)[57:0];(2,-4,-1)[57:0];(2,-4,0)[57:0];"+
						"(2,-4,1)[57:0];(2,-4,2)[57:0];(2,-4,3)[57:0];(2,-3,-3)[57:0];"+
						"(2,-3,3)[57:0];(2,-2,-1)[57:0];(2,-2,0)[57:0];(2,-2,1)[57:0];"+
						"(3,-8,-3)[57:0];(3,-8,3)[57:0];(3,-7,-3)[57:0];(3,-7,0)[57:0];"+
						"(3,-7,3)[57:0];(3,-6,-3)[57:0];(3,-6,0)[57:0];(3,-6,3)[57:0];"+
						"(3,-5,-3)[57:0];(3,-5,-2)[57:0];(3,-5,-1)[57:0];(3,-5,0)[57:0];"+
						"(3,-5,1)[57:0];(3,-5,2)[57:0];(3,-5,3)[57:0];(3,-4,-3)[57:0];"+
						"(3,-4,-2)[57:0];(3,-4,0)[57:0];(3,-4,2)[57:0];(3,-4,3)[57:0];"+
						"(3,-3,-3)[57:0];(3,-3,-2)[57:0];(3,-3,2)[57:0];(3,-3,3)[57:0]");
		br.flush();
		fos.close();
	}
	public void Beacons5(File file) throws IOException{
		FileOutputStream fos = new FileOutputStream(file);
		BufferedWriter br = new BufferedWriter(new OutputStreamWriter(fos));
		br.append("(-3,-11,-3)[57:0];(-3,-11,3)[57:0];(-3,-10,-3)[57:0];(-3,-10,0)[57:0];"+
				"(-3,-10,3)[57:0];(-3,-9,-3)[57:0];(-3,-9,0)[57:0];(-3,-9,3)[57:0];"+
				"(-3,-8,-3)[57:0];(-3,-8,-2)[57:0];(-3,-8,-1)[57:0];(-3,-8,0)[57:0];"+
				"(-3,-8,1)[57:0];(-3,-8,2)[57:0];(-3,-8,3)[57:0];(-3,-7,-3)[57:0];"+
				"(-3,-7,-2)[57:0];(-3,-7,0)[57:0];(-3,-7,2)[57:0];(-3,-7,3)[57:0];"+
				"(-3,-6,-3)[57:0];(-3,-6,-2)[57:0];(-3,-6,2)[57:0];(-3,-6,3)[57:0];"+
				"(-3,-5,-3)[57:0];(-3,-5,3)[57:0];(-3,-4,-3)[57:0];(-3,-4,0)[57:0];"+
				"(-3,-4,3)[57:0];(-3,-3,-3)[57:0];(-3,-3,0)[57:0];(-3,-3,3)[57:0];"+
				"(-3,-2,0)[57:0];(-2,-11,-2)[57:0];(-2,-11,-1)[57:0];(-2,-11,0)[57:0];"+
				"(-2,-11,1)[57:0];(-2,-11,2)[57:0];(-2,-10,-2)[57:0];(-2,-10,-1)[57:0];"+
				"(-2,-10,1)[57:0];(-2,-10,2)[57:0];(-2,-8,-3)[57:0];(-2,-8,3)[57:0];"+
				"(-2,-7,-3)[57:0];(-2,-7,-2)[57:0];(-2,-7,-1)[57:0];(-2,-7,0)[57:0];"+
				"(-2,-7,1)[57:0];(-2,-7,2)[57:0];(-2,-7,3)[57:0];(-2,-6,-3)[57:0];"+
				"(-2,-6,3)[57:0];(-2,-5,-1)[57:0];(-2,-5,0)[57:0];(-2,-5,1)[57:0];"+
				"(-2,-4,0)[57:0];(-2,-2,0)[57:0];(-1,-11,-2)[57:0];(-1,-11,0)[57:0];"+
				"(-1,-11,2)[57:0];(-1,-10,-2)[57:0];(-1,-10,0)[57:0];(-1,-10,2)[57:0];"+
				"(-1,-9,0)[57:0];(-1,-8,-3)[57:0];(-1,-8,3)[57:0];(-1,-7,-2)[57:0];"+
				"(-1,-7,-1)[57:0];(-1,-7,1)[57:0];(-1,-7,2)[57:0];(-1,-6,-1)[57:0];"+
				"(-1,-6,1)[57:0];(-1,-5,-2)[57:0];(-1,-5,-1)[57:0];(-1,-5,0)[57:0];"+
				"(-1,-5,1)[57:0];(-1,-5,2)[57:0];(-1,-4,0)[57:0];(-1,-2,0)[57:0];"+
				"(-1,-1,-1)[57:0];(-1,-1,1)[57:0];(0,-11,-2)[57:0];(0,-11,-1)[57:0];"+
				"(0,-11,1)[57:0];(0,-11,2)[57:0];(0,-10,-3)[57:0];(0,-10,-1)[57:0];"+
				"(0,-10,1)[57:0];(0,-10,3)[57:0];(0,-9,-3)[57:0];(0,-9,-1)[57:0];"+
				"(0,-9,1)[57:0];(0,-9,3)[57:0];(0,-8,-3)[57:0];(0,-8,3)[57:0];"+
				"(0,-7,-3)[57:0];(0,-7,-2)[57:0];(0,-7,2)[57:0];(0,-7,3)[57:0];"+
				"(0,-5,-2)[57:0];(0,-5,-1)[57:0];(0,-5,1)[57:0];(0,-5,2)[57:0];"+
				"(0,-4,-3)[57:0];(0,-4,-2)[57:0];(0,-4,-1)[57:0];(0,-4,1)[57:0];"+
				"(0,-4,2)[57:0];(0,-4,3)[57:0];(0,-3,-3)[57:0];(0,-3,3)[57:0];"+
				"(0,-2,-3)[57:0];(0,-2,-2)[57:0];(0,-2,-1)[57:0];(0,-2,1)[57:0];"+
				"(0,-2,2)[57:0];(0,-2,3)[57:0];(1,-11,-2)[57:0];(1,-11,0)[57:0];"+
				"(1,-11,2)[57:0];(1,-10,-2)[57:0];(1,-10,0)[57:0];(1,-10,2)[57:0];"+
				"(1,-9,0)[57:0];(1,-8,-3)[57:0];(1,-8,3)[57:0];(1,-7,-2)[57:0];"+
				"(1,-7,-1)[57:0];(1,-7,1)[57:0];(1,-7,2)[57:0];(1,-6,-1)[57:0];"+
				"(1,-6,1)[57:0];(1,-5,-2)[57:0];(1,-5,-1)[57:0];(1,-5,0)[57:0];"+
				"(1,-5,1)[57:0];(1,-5,2)[57:0];(1,-4,0)[57:0];(1,-2,0)[57:0];"+
				"(1,-1,-1)[57:0];(1,-1,1)[57:0];(2,-11,-2)[57:0];(2,-11,-1)[57:0];"+
				"(2,-11,0)[57:0];(2,-11,1)[57:0];(2,-11,2)[57:0];(2,-10,-2)[57:0];"+
				"(2,-10,-1)[57:0];(2,-10,1)[57:0];(2,-10,2)[57:0];(2,-8,-3)[57:0];"+
				"(2,-8,3)[57:0];(2,-7,-3)[57:0];(2,-7,-2)[57:0];(2,-7,-1)[57:0];"+
				"(2,-7,0)[57:0];(2,-7,1)[57:0];(2,-7,2)[57:0];(2,-7,3)[57:0];"+
				"(2,-6,-3)[57:0];(2,-6,3)[57:0];(2,-5,-1)[57:0];(2,-5,0)[57:0];"+
				"(2,-5,1)[57:0];(2,-4,0)[57:0];(2,-2,0)[57:0];(3,-11,-3)[57:0];"+
				"(3,-11,3)[57:0];(3,-10,-3)[57:0];(3,-10,0)[57:0];(3,-10,3)[57:0];"+
				"(3,-9,-3)[57:0];(3,-9,0)[57:0];(3,-9,3)[57:0];(3,-8,-3)[57:0];"+
				"(3,-8,-2)[57:0];(3,-8,-1)[57:0];(3,-8,0)[57:0];(3,-8,1)[57:0];"+
				"(3,-8,2)[57:0];(3,-8,3)[57:0];(3,-7,-3)[57:0];(3,-7,-2)[57:0];"+
				"(3,-7,0)[57:0];(3,-7,2)[57:0];(3,-7,3)[57:0];(3,-6,-3)[57:0];"+
				"(3,-6,-2)[57:0];(3,-6,2)[57:0];(3,-6,3)[57:0];(3,-5,-3)[57:0];"+
				"(3,-5,3)[57:0];(3,-4,-3)[57:0];(3,-4,0)[57:0];(3,-4,3)[57:0];"+
				"(3,-3,-3)[57:0];(3,-3,0)[57:0];(3,-3,3)[57:0];(3,-2,0)[57:0]");
				
		br.flush();
		fos.close();
	}
}
